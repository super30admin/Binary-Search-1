// Time Complexity : O(log n)
// Space Complexity :
// Did this code successfully run on Leetcode : O(1)
// Any problem you faced while coding this : no


// Your code here along with comments explaining your approach

class Solution {
    public int search(int[] nums, int target) {
        int l=0;
        int n=nums.length;
        int r = n-1;
        int mid;
        while(l<=r){
            if(nums[l]==target)
                return l;
            if(nums[r]==target)
                return r;
            
            mid=(l+r)/2;
            if(nums[mid]==target){
                return mid;
            }
            else if(nums[l]<=nums[mid]){
                if(target>=nums[l] && target<=nums[mid])
                    r = mid -1;
                else
                    l = mid +1;
            }
            else{
                if(target <= nums[r] && target >= nums[mid])
                    l=mid +1;
                else
                    r=mid - 1;
            }
        }
        return -1;
    }
}
