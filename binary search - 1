class Solution {
    
    public boolean searchMatrix(int[][] matrix, int target) {
        boolean result = false;
        int size = matrix.length * matrix[0].length;
        int n = matrix[0].length;
        int start =0, end = size-1;
        
        while(start <= end)
        {
                int mid = start + (end-start) / 2;
                int row = mid / n;
                int col = mid % n;
           //System.out.println("mid = "+mid+" row = "+row+" col = "+col+" matrix[r][c] "+matrix[row][col]);
            if(matrix[row][col] == target)
            {
                return true;
            }
            else if(matrix[row][col] > target)
            {
                end = mid-1;
            }
            else
            {
                start = mid+1;
            }
        }
        
        return false;
    }
   
}

class Solution {
    public int search(int[] nums, int target) {
        int start = 0, end = nums.length-1;
        
        while(start <= end)
        {
            int mid = start + (end-start) /2;
            
            //System.out.println("start = "+start+" mid = "+mid+" end = "+end+" nums[mid] = "+nums[mid]);
            
            if(nums[mid] == target)
            {
                return mid;
            }
            
            else 
            {
                if(nums[start]<=nums[mid])
                {
                    if(nums[start]<=target && target < nums[mid])
                    {
                        end = mid-1;
                    }
                    else
                    {
                        start = mid+1;
                    }
                }
                else if(nums[mid]<=target && target <= nums[end])
                {
                    start = mid+1;
                }
                else
                {
                    end = mid -1;
                }
            }
            
        }
        return -1;
    }
}

/**
 * // This is ArrayReader's API interface.
 * // You should not implement it, or speculate about its implementation
 * interface ArrayReader {
 *     public int get(int index) {}
 * }
 */

class Solution {
    public int search(ArrayReader reader, int target) {
        int start = 0, end =1;
        
        while(reader.get(end)<target)
        {
            start = end;
            end = end *2;
        }
        while(start <= end)
        {
            int mid = start + (end-start)/2;
            
            if(reader.get(mid) == target)
            {
                return mid;
            }
            else
            {
                if(reader.get(mid) >target)
                {
                    end = mid-1;
                }
                else
                {
                    start = mid+1;
                }
            }
        }
        return -1;
        
        
    }
    
}
