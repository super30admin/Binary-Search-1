74. Search a 2D Matrix

class Solution:
    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:
        if (matrix==None or len(matrix[0])==0):
            return False
        m=len(matrix)
        n=len(matrix[0])
        l=0
        h=m*n-1
        while(l<=h):
            mid=l+(h-l)//2
            r=mid//n
            c=mid%n
            if matrix[r][c]==target:
                return True
            elif matrix[r][c]<target:
                l=mid+1
            else:
                h=mid-1
        return False
        

33. Search in Rotated Sorted Array

class Solution:
    def search(self, nums: List[int], target: int) -> int:
        if nums==None or len(nums)==0:
            return -1
        l=0
        h=len(nums)-1
        while (l<=h):
            mid=l+(h-l)//2
            if target==nums[mid]:
                return mid
            if (nums[l]<=nums[mid]):
                if target<nums[mid] and target>=nums[l]:
                    h=mid-1
                else:
                    l=mid+1
            else:
                if target>nums[mid] and target<=nums[h]:
                    l=mid+1
                else:
                    h=mid-1
        return -1