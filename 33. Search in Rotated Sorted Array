Time and Space Complexity : O(1)
class Solution {
    public int search(int[] nums, int target) {
        if(nums==null || nums.length==0) return -1; // check for empty array
        // initialise low and high pointers
        int low=0;
        int high= nums.length-1;
        while(low<=high)
        {
            int mid= low+(high-low)/2; //calculate mid
            // search left sorted array
            if(nums[low]<=nums[mid])
            {
                if(nums[low]<=target && target<nums[mid])
                {
                    high=mid-1;
                }
                else
                {
                    low=mid+1;
                }
            }
            //search in right sorted array
            else
            {
                if(nums[mid]<target && target<=nums[high])
                {
                    low=mid+1;
                }
                else
                {
                    high=mid-1;
                }
            }
            if(nums[mid]==target) return mid;

            
        }
        return -1;
    }
}
