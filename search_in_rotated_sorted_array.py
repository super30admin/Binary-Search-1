# -*- coding: utf-8 -*-
"""Search in Rotated Sorted Array.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17c3Y286ZeewM1EZKCntwqHRiankU7djh
"""

class Solution:
    def search(self, nums: List[int], target: int) -> int:
        if (nums is None) or (target is None):
            return -1
        
        low = 0 
        high = len(nums) - 1
        
        while low <= high:
            mid = low + (high - low) // 2
            if nums[mid] == target:
                return mid
            if nums[low] <= nums[mid]:
                if (target >= nums[low] and target < nums[mid]):
                    high = mid -1
                else:
                    low = mid +1 
            else:
                if (target > nums[mid] and target <= nums[high]):
                    low = mid + 1
                else:
                    high = mid -1
        return -1