/*
Approach:
intution - sorted array is given use binary search
array is rotated at x position after sort
perform binary search and then compare target value to boundaries to move high low pointer

Time complexity - O(log n)
Space complexity - O(N)
*/
class Solution {
    public int search(int[] nums, int target) {
        int mid = 0;
        int low = 0;
        int high = nums.length - 1;
        
        while (low <= high) {
            
            mid = low + (high - low) / 2;
            
            if (nums[mid] == target) {
                return mid;
            } else if (nums[mid] >= nums[low]) {
                if (target >= nums[low] && target < nums[mid]) {
                    high = mid - 1;
                } else {
                    low = mid + 1;
                }
            } else {
                if (target <= nums[high] && target > nums[mid]) {
                    low = mid + 1;
                } else {
                    high = mid - 1;
                }
            }
        }
        return -1;
    }
    
}
