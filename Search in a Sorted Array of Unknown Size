/**
 // Time Complexity : 1 ms 
// Space Complexity : 40 MB
// Did this code successfully run on Leetcode :yes 
// Any problem you faced while coding this :
determining r

// Your code here along with comments explaining your approach
 
 * // This is ArrayReader's API interface.
 * // You should not implement it, or speculate about its implementation
 * interface ArrayReader {
 *     public int get(int index) {}
 * }
 */

class Solution {
    public int BinarySearch( ArrayReader reader, int target, int l, int r)
    {
        while( r>= l)
        {
            int mid = l + (r-l) / 2;
            
            if(reader.get(mid) == target)
                return mid;
            else if(reader.get(mid) > target)
                r = mid -1;
            else
                l = mid +1;
            
        }
        return -1;
    }
    public int search(ArrayReader reader, int target) {
        int l = 0, r = 1;
        while( r <= 10000 && target > reader.get(r))
        {
             l = r;
            r = r * 2;
        }
        
            return BinarySearch(reader, target, l, r);
    }
}
