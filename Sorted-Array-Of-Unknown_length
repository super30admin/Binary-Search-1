// Time Complexity : O(log n)
// Space Complexity : O(1)
// Did this code successfully run on Leetcode :
// Any problem you faced while coding this :


// Your code here along with comments explaining your approach

class Solution {
    public int search(ArrayReader reader, int target) {
        int low = 0, high =1;
        while(target > reader.get(high)) {
            low = high;
            high = 2 * high;
        }
        return binarySearch(reader, target, low, high);
    }

    private int binarySearch(ArrayReader reader, int target, int low, int high) {
        while(low <= high) {
            int mid = mow + (high - low) /2;
            if(target == reader.get(mid)) {
                return mid;
            }
            else  if(target < reader.get(mid)) {
                high = mid - 1;
            } else {
                low = mid + 1;
            }
        }
        return -1;
    }
}