class Solution {
    public int search(int[] nums, int target) {
        //check if array is null
        if(nums == null || nums.length==0){
            return -1;
        }

            int n = nums.length;
            int low =0;
            int high = n-1;
            
            
            //If the Array is sorted
            while(low<=high){
                int mid = low + (high-low)/2;
                if(target == nums[mid]){
                    return mid;
                }
                
                //check in which part is sorted
                else if(nums[low]<=nums[mid]){
                    
                    //Does your target lie in the left side ?
                    if(target>=nums[low] && target <nums[mid]){
                        high = mid - 1;
                    }
                    else{
                        low = mid + 1;
                    }
                }
                else 
                    if(target>nums[mid] && target<=nums[high])
                    {
                        low = mid +1;
                    }
                    else{
                    high = mid-1;
                    }
                
                    }
    return -1;    
    }
    }
