// Time Complexity : O(log n)
// Space Complexity :O(1)
// Did this code successfully run on Leetcode : yes
// Any problem you faced while coding this : while applying binary search on the range initially I missed adding start index to mid index value and found it on dry running.


// Your code here along with comments explaining your approach
// checking the last element of each row against the target and if its greter than the last element, go to next row. traverse the row only if target in smaller than last  element


class Solution {
    public int search(ArrayReader reader, int target) {
          if(target>=reader.get(0)){
     int start=0;
      int  end=1;
        if(reader.get(0)==target){
            return 0;
        }
        if(reader.get(1)==target){
            return 1;
        }
      
        while(target>reader.get(end)){
            start=end;
            end=end*2;
        }
        
        while(start<=end){
        int mid=((end-start+1)/2)+start;
        
        if(reader.get(mid)==target){
            return mid;
        }else if(target>reader.get(mid)){
            start=mid+1;
        }else if(target<reader.get(mid)){
            end=mid-1;
        }
        }}
        return -1;
    }
}

