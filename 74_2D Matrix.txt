// Time Complexity : O(log n)
// Space Complexity : O(1)
// Did this code successfully run on Leetcode : yes
// Any problem you faced while coding this : converting mid index to corresponding matrix indices


// Your code here along with comments explaining your approach
we just consider this whole matrix as a sorted array an dapply BS by mapping mid to corresponding matrix indices.

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
     int n = matrix.length;
        int m = matrix[0].length;
        
        int start = 0;
        int end = (m*n) - 1;
        
        while(start<=end){
            
            int mid = start + (end-start)/2;
            int i = mid/m;//m is number of columns
            int j = mid%m;//m is number of columns
            if(matrix[i][j]==target){
                return true;
            }else if(matrix[i][j]<target){
                start=mid+1;
            }else{
                end = mid-1;
            }
        }
      
        return false;
    }
}