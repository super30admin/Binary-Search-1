// Time Complexity :o(logn)
// Space Complexity :o(1)
// Did this code successfully run on Leetcode :yes
// Any problem you faced while coding this :no


// Your code here along with comments explaining your approach

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        if(matrix.length==0) return false;
        
        int rows=matrix.length;
        int columns=matrix[0].length; 
        int left=0;
        int right=rows*columns-1;
        
        while(left<=right){
            
            int midpoint=left+(right-left)/2;
            int midpoint_element=matrix[midpoint/columns][midpoint%columns];
            if(midpoint_element==target){
                return true;
            }else if(target<midpoint_element){
                right=midpoint-1;
                
            }else if (target>midpoint_element){
                left=midpoint+1;
            }
        }
        return false;
    }
}
