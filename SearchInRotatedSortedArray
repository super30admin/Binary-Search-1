//Time complexity O(Log n)
//Tested on Leetcode
class SearchInRotatedSortedArray {
    public static int search(int[] nums, int target) {
        int n=nums.length;
        int left=0,right=n-1,mid=0;

        while(left<=right){
             mid=left+((right-left)/2);
             if(nums[mid] == target)
                 return mid;

             else if(nums[mid]>=nums[left]){
                 if(target<=nums[mid] && target>=nums[left])
                     right=mid-1;
                 else
                     left=mid+1;
             }
             else{
                 if(target>=nums[mid] && target<=nums[right])
                     left=mid+1;
                 else
                     right=mid-1;
             }
        }
        return -1;
    }
}