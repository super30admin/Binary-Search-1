// Time Complexity :
// Space Complexity :
// Did this code successfully run on Leetcode :
// Any problem you faced while coding this :


// Your code here along with comments explaining your approach

// As we dont know the length but we want to achieve rsult in log n time complexity, we try to find end first
// we start with o as start and 1 as end, we increase end by twice and set start = end till we find the value greater than
//te target. now as we have start and end, simply apply binary search
/**
 * // This is ArrayReader's API interface.
 * // You should not implement it, or speculate about its implementation
 * interface ArrayReader {
 *     public int get(int index) {}
 * }
 */

class Solution {
    public int search(ArrayReader reader, int target) {
        int start=0;
        int end = 1;
        
        while(target>reader.get(end)){
            start = end;
            end = end *2;
        }
        
        while(start<=end) {
			int mid =start + (end-start)/2;
			if(reader.get(mid)==target) {
				return mid;
			}
			else if(reader.get(mid)<target) {
				start=mid+1;
			}
			else {
				end=mid-1;
			}
		}
        return -1;
        
    }
}