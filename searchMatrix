// Time Complexity : O(log m*n)
// Space Complexity : O(1)
// Did this code successfully run on Leetcode : yes
// Any problem you faced while coding this : no
class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        //base case
        if(matrix==null || matrix.length==0) return false;
        int n= matrix.length;
        int m= matrix[0].length;
        int low = 0;
        int high = n*m-1;
        while(low<=high){
            int mid=low+(high-low)/2;
            //the row num in matrix will be mid divied by number of cols 
            int row= mid/m;
            //as we need to calculate range between the cols we take mid%m
            int col=mid%m;
            if(target==matrix[row][col]) return true;
            else if(target <= matrix[row][col]){
                high=mid-1;
            }else{
                low= mid+1;
            }
             
        }
        return false;
    }
}