// Time Complexity :O(log n)
// Space Complexity :O(1)
// Did this code successfully run on Leetcode :
// Any problem you faced while coding this :


// Your code here along with comments explaining your approach
class Solution{
    public int search(ArrayReader reader, int target)
    {
        int high = 1;
        int low =1;
        while(reader.get(high)!= Integer.MAX_VALUE && reader.get(high) <= target){
            high = high *2;
            low = high/2;
        }
        return binarySearch(reader, target, low, high);

    }
    private int binarySearch(ArrayReader reader, int target, int low, int high){
        while(low <= high)
        {
            int mid = low + (high - low)/2;

            if(reader.get(mid) == target){
                return mid;
            }
            else if(reader.get(mid) < target){
                low = mid + 1 ;
            }else {
                high = mid - 1;
            }
        }
        return -1;
    }
}
