// Time Complexity : O log(N)
// Space Complexity : O(1)
// Did this code successfully run on Leetcode :yes
// Any problem you faced while coding this :


// Your code here along with comments explaining your approach

class Solution {
    public int search(int[] nums, int target) {
             int start=0, end= nums.length-1; //initialize start and end
        while(start<=end){   //sorted  array
          
          int mid=start+(end-start)/2; //define  minimum
          if(nums[mid]== target) return mid; //edge case directly if mid is the targer return
            else if (nums[mid]>=nums[start]){  // Binary search 
                if (target>=nums[start]&& target<nums[mid]){
                    end=mid-1;
                }else{
                    start=mid+1;
                }
            }else{
                if(target<=nums[end]&& target>nums[mid]){
                    start=mid+1;
                }else{
                    end=mid-1;
                }
            }
        }return -1;
    }
}
