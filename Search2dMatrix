// time complexity : O(log n) 
// space complexity: O(1)
//executed successfully on leetcode

class Search2dMatrix {
    public boolean searchMatrix(int[][] matrix, int target) {

       
        int row= matrix.length;
        int column = matrix[0].length;
        int left=0;
        int right=row*column-1;

        while(left<=right){
            int mid = left+ (right-left);

            //find index for mid element
            int rowIndex= mid/column;
            int columnIndex= mid%column;

            if(matrix[rowIndex][columnIndex]==target){
                return true;
            }
            if(matrix[rowIndex][columnIndex]<target){
                left=mid+1;
                
            }
            else{
                right= mid-1;
            }
        }
        return false;
    }
}
