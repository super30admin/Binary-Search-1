// Time Complexity :O(log n)
// Space Complexity :O(1)
// Did this code successfully run on Leetcode :
// Any problem you faced while coding this :

Search in a rotated array
// Your code here along with comments explaining your approach
class Solution {
    public int search(int[] nums, int target) {
        int low = 0;
        int high = nums.length - 1;
        while(low<=high)
        {
            int mid = low + (high-low)/2;
            if(nums[mid] == target)
            {
                return mid;
            }
            else if(nums[low]<= nums[mid])
            {
                if(target >= nums[low] && target<nums[mid])
                {
                    high = mid-1;
                    
                }
                else
                {
                    low = mid + 1;
                    
                }
            }
            else
            {
                if(target <= nums[high] && target >= nums[mid])
                {
                    low = mid+1;
                    System.out.println(low);
                }
                else
                {
                    high = mid -1;
                }
            }
        }
        return -1;
    }
}