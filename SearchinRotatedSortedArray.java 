//time Complexity : log(n)
//space Complexity : O(1)
class Solution {
    public int search(int[] nums, int target) {
        if (nums==null && nums.length==0) return -1;
        int l=0;
        int h=nums.length-1;
        if (nums[l]==target)return l;
        while (l<=h){
          int mid=l+(h-l)/2;
            if(nums[mid]==target){
                return mid;
            }
          if (nums[mid]>=nums[l]){ //left side is sorted
           if (target<nums[mid]&&target>=nums[l]){
              h=mid;
           }
            else{
                  l=mid+1;
              }
          }
          else{ //right side is sorted
              if (target>nums[mid] && target<=nums[h]){
                   l=mid+1;
              }
              else{
                  h=mid;
              }
             
          }
        }
        return -1;
    }
}