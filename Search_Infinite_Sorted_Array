// Binary Search
// Time complexity - O(log N) - N is the index of the target number
// Space complexity O(1)

class Solution {
  public int search(ArrayReader reader, int target) {

    int low = 0, high = 1;

    while(reader.get(high) < target){
      low = high;
      high = high*2;
    }

    // System.out.println("low: "+low);
    // System.out.println("high: "+high);
    return binarySearch(reader, low, high, target);
  }

  public int binarySearch(ArrayReader reader, int low, int high, int target){

    while(low<=high){

      int mid= low+ (high-low)/2;

      if(reader.get(mid) == target){
        return mid;
      }

      else if(reader.get(mid) < target){

        low = mid+1;
      }else{
        high=mid-1;
      }
    }
    return -1;
  }
}