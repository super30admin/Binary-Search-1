/74. Search a 2D Matrix

// Time Complexity :O(log n*m)
// Space Complexity :O(1)
// Did this code successfully run on Leetcode :yes
// Any problem you faced while coding this :no


// Your code here along with comments explaining your approach in three sentences only


class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        
//row length
int m=matrix.length;
//column length
int n=matrix[0].length;

int low=0, high=m*n-1;
while(low<=high){
int mid=low+(high-low)/2;
int r=mid/n;
int c=mid%n;

if(matrix[r][c]==target){
return true;
}
else if(matrix[r][c]<target){
low=mid+1;
}else{
high=mid-1;
}

}

return false;

    }
}