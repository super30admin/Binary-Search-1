// Time Complexity :0 ms
// Space Complexity : 38.2 MB
// Did this code successfully run on Leetcode : yes
// Any problem you faced while coding this :
coming to an optimal solution

// Your code here along with comments explaining your approach
class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int l =0;
        int m = matrix.length;
        int n = matrix[0].length;
        int r = (n *m) -1;
        
        while(r>=l)
        {
            int mid = l + (r-l) /2 ;
            int row = mid / n;
            int col = mid % n;
            
            if(target == matrix[row][col])
                return true;
            else if(target > matrix[row][col])
            {
                l = mid + 1;
            }
            else 
            {
                r = mid-1; 
            }
        }
        return false;
    }
}
