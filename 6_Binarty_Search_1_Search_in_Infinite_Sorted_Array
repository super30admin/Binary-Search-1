#Time Complexity : O(log T) beacuse of binary search where T is the target
#Space Complexity : I am using the iterative version of binary serach, so It's O(1)
#Did this code successfully run on Leetcode : It's with premium version
#Any problem you faced while coding this : No

#Your code here along with comments explaining your approach



def search(reader, target): 
	left=0
	right=1
	while reader.get(right)<target: 
		left=right
		right=right*2
		
	while left<=right: 
		mid=(left+right)//2
		if reader.get(mid)==target: 
			return mid
		elif reader.get(mid)<target: 
			left=mid+1
		elif reader.get(mid)>target: 
			right=mid-1	
			
