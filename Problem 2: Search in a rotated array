#time complexity: O(log n)
#space complexity: O(1)
#Code ran on leetcode
class Solution:
    def search(self, nums: List[int], target: int) -> int:
        if len(nums)==0: return -1
        low = 0
        high = len(nums)-1
        while (low<high):
            mid = int(low+(high-low)/2)
            if target == nums[mid]: return mid
            elif nums[low]<=nums[mid]:
                if nums[low]<= target and target<nums[mid]:
                    high = mid-1
                else:
                    low = mid+1
            else:
                if target<=nums[high] and target>nums[mid]:
                    low = mid+1
                else:
                    high = mid-1
        if nums[high]==target: return high
        return -1
