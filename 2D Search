# Time Complexity: O(log(n))
# Space Complexity: O(1)
class Solution:
    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:
        m, n= len(matrix), len(matrix[0])
        low= 0
        high= len(matrix[0]*len(matrix))-1
        while(low<=high):
            mid= low+ (high-low)//2
            r= mid//n
            c=mid%n
            if(matrix[r][c]== target):
                return True
            elif (matrix[r][c] > target):
                high= mid-1
            else:
                low= mid+1
        return False

