// Time Complexity :O(logm+logn)
// Space Complexity :O(1)
// Did this code successfully run on Leetcode :yes
// Any problem you faced while coding this :went wrong first and then after the class got cleared with Sai's lecture and then tried it worked.


// Your code here along with comments explaining your approach
//2D-Matrix
class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int row =matrix.length;
        int column = matrix[0].length;
        int left = 0;
        int right = row*column-1;
        while(left<=right)
        {
            int midpoint = left + (right-left)/2;
            int mid_element = matrix[midpoint/column][midpoint%column];
            if(mid_element == target)
            {
                return true;
            }
            else if(target < mid_element)
            {
                right = midpoint - 1;
            }
            else
            {
                left = midpoint + 1;
            }
        }
        return false;
    }
}