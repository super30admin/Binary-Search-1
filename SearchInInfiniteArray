//Time complexity O(Log n)
//Space complexity O(1)
//Not tested on leetcode as I dont have premium membership.
public class SearchInInfiniteArray {
    public int search(ArrayReader reader, int target){
        if(reader.get(0) > target){
            return -1;
        }
        int low = 0;
        int high = 1;
        while (reader.get(high)<target){
            low=high;
            high = high*2;
        }
        return binSearch(reader,target,low,high);
    }
    public static int binSearch(ArrayReader reader,int target,int l, int u){
        if(u>=l){
            int mid=l+((u-l)/2);
            if(reader.get(mid)==target){
                return mid;
            }
            if(reader.get(mid)>target){
                return binSearch(reader,target,l,mid-1);
            }
            if(reader.get(mid)<target){
                return binSearch(reader,target,mid+1,u);
            }
        }
        return -1;
    }
}
